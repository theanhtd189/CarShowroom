@model Models.Framework.ProductCategory
@using Models.DAL
@{
    ViewBag.Title = "Edit Product Category";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var dal = new ProductCategoryDAL();
    var listparentid = dal.GetListParentId(Model.ID);
}

@section header{}

@using (Html.BeginForm("Update", "ProductCategory", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ProductCategory</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.TextBoxFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" }, value = @Model.ID , type="hidden" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" }, value = @Model.Name })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="select-type" name="ParentID">
                <option value="@Model.ParentID" selected> @dal.GetNameProductCategory(Model.ParentID)</option>
                @for(int i=0;i<listparentid.Count;i++)
                {
                    <option value="@listparentid[i]">@dal.GetNameProductCategory(listparentid[i])</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" }, value = @Model.MetaTitle })
            @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShowOnHome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ShowOnHome, new { htmlAttributes = new { @class = "form-control" }, value = "true" })
            @Html.ValidationMessageFor(model => model.ShowOnHome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, value = @Model.Description })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" value="Update" class="btn btn-default">
                Thêm mới
            </button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


